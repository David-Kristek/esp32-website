import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import tw from "tailwind-styled-components";
import dbConnect from "../util/mongodb";
// https://codesandbox.io/s/piffv?file=/src/pages/api/chat.ts
import * as proccess from "child_process";
import Box from "../components/Box";
import LineTempChart from "../components/LineTempChart";
import { requireAuthentication, userFromRequest } from "../util/tokens";
import { MdOutlineArrowDropDownCircle } from "react-icons/md";
import axios from "axios";
import Router from "next/router";
interface Props {
  user: any;
}
const Home: NextPage = ({ user }) => {
  // console.log(user);
  const Container = tw.div`
  bg-verydarkgreen  
  px-[10vw]
  min-h-[100vh]
`;
  const logout = async () => {
    const resp = await axios.delete("/api/auth");
    if (resp.data.msg === "success") Router.push("/login");
  };

  return (
    <Container>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        <header className="w-full flex md:justify-between pt-[8vh] md:flex-row flex-col">
          <h1 className="text-2xl text-darkgreen py-5 md:text-left	text-center">
            Centrum Vaší chytré domácnosti
          </h1>
          <div className="py-5 flex md:mx-0 mx-auto">
            <img
              src="/images/boardicon.png"
              className="w-[100px]"
              alt="board"
            />
            <div
              id="dropdown"
              className="relative rounded-xl text-xl border-darkgreen border-2 h-12 p-2 text-lightgreen cursor-pointer group hover:border-lightgreen hover:rounded-b-none transition-all"
            >
              <span className="flex gap-x-4 items-center" id="user">
                {user.username}
                <MdOutlineArrowDropDownCircle className="text-lightgreen text-xl" />{" "}
              </span>
              <ul className="absolute group-hover:block hover:block hidden text-lightgreen  border-2 border-lightgreen mt-2 inset-x-0 text-base">
                <li className="text-center py-1 pt-2 hover:bg-black">
                  Nastavní
                </li>
                <ul
                  className="text-center py-1 hover:bg-black"
                  onClick={logout}
                  id="logout"
                >
                  Odhlásit se
                </ul>
              </ul>
            </div>
          </div>
        </header>
        <div className="grid md:grid-cols-2 gap-x-[5vw] gap-y-14">
          <section>
            <h2 className="text-2xl text-lightgreen font-bold">
              Aktuální hodnoty
            </h2>
            <p className="text-darkgreen pt-1">
              Poslední připojení před: <b>1:34 min.</b>
            </p>
            <div className="flex flex-wrap justify-around gap-y-5 gap-x-3 mt-12">
              <Box imgpath="Thermometer.png" value={"22.3 °C"} />
              <Box imgpath="Humidity.png" value={"50%"} />
              <Box imgpath="Heating.png" value={"zapnuto"} />
            </div>
          </section>
          <section>
            <h2 className="text-2xl text-lightgreen font-bold">
              Vytápěcí režim
            </h2>
            <div className="flex flex-wrap gap-y-5 gap-x-3 mt-12 md:justify-start justify-center">
              <Box value={"Ráno a večer"} active />
              <Box value={"Celý den"} />
              {/* <Box value={"Pryč"} />
              <Box value={"Úsporný režim"} />
              <Box value={"Rýma"} /> */}
            </div>
          </section>
          <section className="col-span-2">
            <LineTempChart />
          </section>
        </div>
      </main>
    </Container>
  );
};

export default Home;

export const getServerSideProps = requireAuthentication(
  async (context: any) => {
    const db = await dbConnect();
    const someData = JSON.stringify({ curTemp: 18 });
    const pythonScript = proccess.spawn("python", [
      "util/python/main.py",
      someData,
    ]);
    pythonScript.stdout.on("data", (data) => {
      console.log(JSON.parse(data.toString()));
    });
    const user = await userFromRequest(context.req);
    console.log(user);
    return {
      props: {
        user,
      },
    };
  }
);
